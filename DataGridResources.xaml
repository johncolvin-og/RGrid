<ResourceDictionary
  x:Class="RGrid.DataGridResources"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:r="clr-namespace:RGrid"
  xmlns:c="clr-namespace:RGrid.Controls"
>
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/RGrid;component/Themes/Colors.xaml"/>
    <ResourceDictionary Source="pack://application:,,,/RGrid;component/WPF/Controls/PopupControl.xaml"/>
    <ResourceDictionary Source="pack://application:,,,/RGrid;component/Columns/Filter/View/FilterTemplates.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <Color x:Key="HeaderColor">#FF4169AA</Color>
  <Color x:Key="HeaderAlternateColor">#FF7E9AB8</Color>
  <SolidColorBrush x:Key="HeaderBrush" Color="{StaticResource HeaderColor}"/>
  <SolidColorBrush x:Key="HeaderAlternateBrush" Color="{StaticResource HeaderAlternateColor}"/>
  <DrawingImage x:Key="Filter" x:Shared="False">
    <DrawingImage.Drawing>
      <DrawingGroup>
        <DrawingGroup.Children>
          <GeometryDrawing Brush="White" Geometry="M0,0L32,0 21.306,17.372993 21.272003,17.372993 21.272003,31.352 10.692001,31.352 10.692001,17.372993z"/>
        </DrawingGroup.Children>
      </DrawingGroup>
    </DrawingImage.Drawing>
  </DrawingImage>
  <DrawingImage x:Key="FilterActive" x:Shared="False">
    <DrawingImage.Drawing>
      <DrawingGroup>
        <DrawingGroup.Children>
          <GeometryDrawing Brush="PaleGreen" Geometry="M0,0L32,0 21.306,17.372993 21.272003,17.372993 21.272003,31.352 10.692001,31.352 10.692001,17.372993z"/>
        </DrawingGroup.Children>
      </DrawingGroup>
    </DrawingImage.Drawing>
  </DrawingImage>

  <DrawingImage x:Key="FilterError" x:Shared="False">
    <DrawingImage.Drawing>
      <DrawingGroup>
        <DrawingGroup.Children>
          <GeometryDrawing Brush="Red" Geometry="M0,0L32,0 21.306,17.372993 21.272003,17.372993 21.272003,31.352 10.692001,31.352 10.692001,17.372993z"/>
        </DrawingGroup.Children>
      </DrawingGroup>
    </DrawingImage.Drawing>
  </DrawingImage>
  <Style x:Key="{x:Type r:DataGridRow}" TargetType="r:DataGridRow">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Padding" Value="0" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="r:DataGridRow">
          <Border
            Name="Bd"
            Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="true"
          >
            <ContentPresenter
              x:Name="_presenter"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            />
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                <Condition Property="IsSelected" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static r:DataGrid.InactiveSelectionHighlightKey}}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                <Condition Property="IsSelected" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{Binding SelectionHighlight, RelativeSource={RelativeSource AncestorType=r:DataGrid}}"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ItemsControl.AlternationIndex" Value="0">
        <Setter Property="Background" Value="Transparent" />
      </Trigger>
      <Trigger Property="ItemsControl.AlternationIndex" Value="1">
        <Setter Property="Background" Value="{Binding AlternatingRowBackground, RelativeSource={RelativeSource AncestorType=r:DataGrid}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="GridViewColumnHeader">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="BorderBrush" Value="{StaticResource HeaderBrush}"/>
    <Setter Property="BorderThickness" Value="0,1,1,0"/>
    <Setter Property="Command" Value="{x:Static r:DataGrid.SortCommand}"/>
    <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}"/>
    <Setter Property="CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType=r:DataGrid}}"/>
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Height" Value="30" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="True">
            <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,1,0" Background="{TemplateBinding Background}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="7"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <!--<Rectangle x:Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed"/>-->
                <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter
                      x:Name="HeaderContent"
                      Grid.ColumnSpan="2"
                      Panel.ZIndex="1"
                      ContentTemplate="{TemplateBinding ContentTemplate}"
                      Content="{TemplateBinding Content}"
                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      Margin="0,0,0,1"
                      RecognizesAccessKey="True"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    />
                    <Border x:Name="OperatorsBorder" Grid.Column="1" Background="{StaticResource HeaderBrush}">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"/>
                          <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Path
                          x:Name="SortArrow"
                          Grid.Column="1"
                          Data="M0,0 L1,0 0.5,1 z"
                          Fill="White"
                          Height="6"
                          Margin="1,0"
                          Opacity="0.5"
                          RenderTransformOrigin="0.5,0.4"
                          Stretch="Fill"
                          VerticalAlignment="Center"
                          Visibility="Collapsed"
                          Width="8"
                        />
                        <c:PopupControl
                          x:Name="FilterPopup"
                          Grid.Column="1"
                          Margin="2,0,0,0"
                          HorizontalContentAlignment="Stretch"
                          VerticalContentAlignment="Stretch"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          BorderThickness="1"
                          ShowExpanderArrow="False"
                          PopupPlacement="Bottom"
                          PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=GridViewColumnHeader}}"
                          IsOpen="{Binding Path='Column.(c:DataGridFilterProperties.FilterOpen)', Mode=TwoWay, RelativeSource={RelativeSource AncestorType=GridViewColumnHeader}}"
                          ContentTemplate="{Binding Path='Column.(c:DataGridFilterProperties.FilterTemplate)', RelativeSource={RelativeSource AncestorType=GridViewColumnHeader}}"
                          Content="{Binding Path='Column.(c:DataGridFilterProperties.Filter)', RelativeSource={RelativeSource AncestorType=GridViewColumnHeader}}"
                        >
                          <c:PopupControl.InputBindings>
                            <KeyBinding
                              Key="Return"
                              CommandParameter="{Binding Path='Column.(c:DataGridFilterProperties.Filter)', RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GridViewColumnHeader}}"
                              Command="{x:Static c:DataGridFilterProperties.CommitCommand}"
                            />
                            <KeyBinding Key="Esc" Command="{x:Static c:PopupControl.CloseCommand}"/>
                          </c:PopupControl.InputBindings>
                          <c:PopupControl.CommandBindings>
                            <CommandBinding
                              Command="{x:Static c:DataGridFilterProperties.CommitCommand}"
                              Executed="{x:Static c:DataGridFilterProperties.commit_executed}"
                              CanExecute="{x:Static c:DataGridFilterProperties.commit_can_execute}"
                            />
                            <CommandBinding
                              Command="{x:Static c:DataGridFilterProperties.ClearCommand}"
                              Executed="{x:Static c:DataGridFilterProperties.clear_executed}"
                              CanExecute="{x:Static c:DataGridFilterProperties.clear_can_execute}"
                            />
                          </c:PopupControl.CommandBindings>
                          <c:PopupControl.Header>
                            <Grid>
                              <Image Name="FilterPopupImage" Height="9" Width="9" Margin="3">
                                <Image.Style>
                                  <Style TargetType="Image">
                                    <Setter Property="Source" Value="{StaticResource Filter}"/>
                                    <Setter Property="Opacity" Value="0.0"/>
                                  </Style>
                                </Image.Style>
                              </Image>
                            </Grid>
                          </c:PopupControl.Header>
                          <c:PopupControl.Style>
                            <Style TargetType="c:PopupControl" BasedOn="{StaticResource {x:Type c:PopupControl}}">
                              <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                  <Setter Property="BorderBrush" Value="LightGray"/>
                                  <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                                <Trigger Property="Content" Value="{x:Null}">
                                  <Setter Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                              </Style.Triggers>
                            </Style>
                          </c:PopupControl.Style>
                        </c:PopupControl>
                      </Grid>
                    </Border>
                  </Grid>
                </Border>
              </Grid>
            </Border>
            <Canvas>
              <Thumb Name="PART_HeaderGripper">
                <Thumb.Style>
                  <Style TargetType="{x:Type Thumb}">
                    <Setter Property="Canvas.Right" Value="-9"/>
                    <Setter Property="Cursor" Value="SizeWE"/>
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                          <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="2"/>
                          </Border>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </Thumb.Style>
              </Thumb>
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="HeaderContent" Property="Panel.ZIndex" Value="0"/>
              <!-- blue_dark -->
              <Setter Property="Background" TargetName="HeaderBorder" Value="#1a345d"/>
              <Setter Property="Background" TargetName="OperatorsBorder" Value="#1a345d"/>
              <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
              <Setter Property="Opacity" TargetName="FilterPopupImage" Value="1.0"/>
              <Setter Property="Grid.Column" TargetName="SortArrow" Value="0"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" TargetName="HeaderBorder" Value="{StaticResource HeaderAlternateBrush}"/>
              <Setter Property="Background" TargetName="OperatorsBorder" Value="{StaticResource HeaderAlternateBrush}"/>
              <Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
              <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
              <Setter Property="MinHeight" Value="20"/>
            </Trigger>
            <!--Filter Active-->
            <DataTrigger Binding="{Binding Path='Column.(c:DataGridFilterProperties.FilterActive)', RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="HeaderContent" Property="Panel.ZIndex" Value="0"/>
              <Setter TargetName="FilterPopupImage" Property="Source" Value="{StaticResource FilterActive}"/>
              <Setter TargetName="FilterPopupImage" Property="Opacity" Value="1.0"/>
              <Setter Property="Grid.Column" TargetName="SortArrow" Value="0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path='Column.(c:DataGridFilterProperties.FilterActive)', RelativeSource={RelativeSource Self}}" Value="{x:Null}">
              <Setter TargetName="HeaderContent" Property="Panel.ZIndex" Value="0"/>
              <Setter TargetName="FilterPopupImage" Property="Source" Value="{StaticResource FilterError}"/>
              <Setter TargetName="FilterPopupImage" Property="Opacity" Value="1.0"/>
              <Setter Property="Grid.Column" TargetName="SortArrow" Value="0"/>
            </DataTrigger>
            <!--Sort Active-->
            <DataTrigger Binding="{Binding Path='Column.SortDirection', RelativeSource={RelativeSource Self}}" Value="Ascending">
              <Setter TargetName="HeaderContent" Property="Panel.ZIndex" Value="0"/>
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
              <Setter TargetName="SortArrow" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180"/>
                </Setter.Value>
              </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path='Column.SortDirection', RelativeSource={RelativeSource Self}}" Value="Descending">
              <Setter TargetName="HeaderContent" Property="Panel.ZIndex" Value="0"/>
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="True">
            <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,1,0" Background="{TemplateBinding Background}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="7"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                --><!--<Rectangle x:Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed"/>--><!--
                <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter
                            x:Name="HeaderContent"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="0,0,0,1"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          />
                    <Path
                            x:Name="SortArrow"
                            Grid.Column="1"
                            Data="M0,0 L1,0 0.5,1 z"
                            Fill="White"
                            Height="6"
                            HorizontalAlignment="Right"
                            Margin="1,0"
                            Opacity="0.5"
                            RenderTransformOrigin="0.5,0.4"
                            Stretch="Fill"
                            VerticalAlignment="Center"
                            Visibility="Collapsed"
                            Width="8"
                          />
                    <c:PopupControl
                            x:Name="FilterPopup"
                            Grid.Column="2"
                            Margin="2,0,0,0"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            ShowExpanderArrow="False"
                            PopupPlacement="Bottom"
                            PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=GridViewColumnHeader}}"
                            IsOpen="{Binding Path='Column.(c:DataGridFilterProperties.FilterOpen)', Mode=TwoWay, RelativeSource={RelativeSource AncestorType=GridViewColumnHeader}}"
                            ContentTemplate="{Binding Path='Column.(c:DataGridFilterProperties.FilterTemplate)', RelativeSource={RelativeSource AncestorType=GridViewColumnHeader}}"
                            Content="{Binding Path='Column.(c:DataGridFilterProperties.Filter)', RelativeSource={RelativeSource AncestorType=GridViewColumnHeader}}"
                          >
                      <c:PopupControl.InputBindings>
                        <KeyBinding
                                Key="Return"
                                CommandParameter="{Binding Path='Column.(c:DataGridFilterProperties.Filter)', RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GridViewColumnHeader}}"
                                Command="{x:Static c:DataGridFilterProperties.CommitCommand}"
                              />
                        <KeyBinding Key="Esc" Command="{x:Static c:PopupControl.CloseCommand}"/>
                      </c:PopupControl.InputBindings>
                      <c:PopupControl.CommandBindings>
                        <CommandBinding
                                Command="{x:Static c:DataGridFilterProperties.CommitCommand}"
                                Executed="{x:Static c:DataGridFilterProperties.commit_executed}"
                                CanExecute="{x:Static c:DataGridFilterProperties.commit_can_execute}"
                              />
                        <CommandBinding
                                Command="{x:Static c:DataGridFilterProperties.ClearCommand}"
                                Executed="{x:Static c:DataGridFilterProperties.clear_executed}"
                                CanExecute="{x:Static c:DataGridFilterProperties.clear_can_execute}"
                              />
                      </c:PopupControl.CommandBindings>
                      <c:PopupControl.Header>
                        <Grid>
                          <Image Name="FilterPopupImage" Height="9" Width="9" Margin="3">
                            <Image.Style>
                              <Style TargetType="Image">
                                <Setter Property="Source" Value="{StaticResource Filter}"/>
                                <Setter Property="Opacity" Value="0.0"/>
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding Path='Column.(c:DataGridFilterProperties.FilterActive)', RelativeSource={RelativeSource AncestorType=GridViewColumnHeader}}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource FilterActive}"/>
                                    <Setter Property="Opacity" Value="1.0"/>
                                  </DataTrigger>
                                  <DataTrigger Binding="{Binding Path='Column.(c:DataGridFilterProperties.FilterActive)', RelativeSource={RelativeSource AncestorType=GridViewColumnHeader}}" Value="{x:Null}">
                                    <Setter Property="Source" Value="{StaticResource FilterError}"/>
                                    <Setter Property="Opacity" Value="1.0"/>
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </Image.Style>
                          </Image>
                        </Grid>
                      </c:PopupControl.Header>
                      <c:PopupControl.Style>
                        <Style TargetType="c:PopupControl">
                          <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                              <Setter Property="BorderBrush" Value="LightGray"/>
                              <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="Content" Value="{x:Null}">
                              <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                          </Style.Triggers>
                        </Style>
                      </c:PopupControl.Style>
                    </c:PopupControl>
                  </Grid>
                </Border>
              </Grid>
            </Border>
            <Canvas>
              <Thumb Name="PART_HeaderGripper">
                <Thumb.Style>
                  <Style TargetType="{x:Type Thumb}">
                    <Setter Property="Canvas.Right" Value="-9"/>
                    <Setter Property="Cursor" Value="SizeWE"/>
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                          <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="2"/>
                          </Border>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </Thumb.Style>
              </Thumb>
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              --><!-- blue_dark --><!--
              <Setter Property="Background" TargetName="HeaderBorder" Value="#1a345d" />
              <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
              <Setter Property="Opacity" TargetName="FilterPopupImage" Value="1.0"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" TargetName="HeaderBorder" Value="LightGreen" />
              <Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
              <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
              <Setter Property="MinHeight" Value="20"/>
            </Trigger>
            --><!--REVIS-->
            <!--<DataTrigger Binding="{Binding Column.SortDirection, RelativeSource={RelativeSource Self}}" Value="Ascending">
                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                    <Setter TargetName="SortArrow" Property="RenderTransform">
                      <Setter.Value>
                        <RotateTransform Angle="180" />
                      </Setter.Value>
                    </Setter>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding Column.SortDirection, RelativeSource={RelativeSource Self}}" Value="Descending">
                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                  </DataTrigger>--><!--
          </ControlTemplate.Triggers>
        </ControlTemplate>-->
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="r:DataGridRowsPresenter" BasedOn="{StaticResource {x:Type ListBox}}"/>
  <Style TargetType="r:DataGrid">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="SelectionMode" Value="Extended"/>
    <Setter Property="ColumnHeaderStyle" Value="{StaticResource {x:Type GridViewColumnHeader}}"/>
    <Setter Property="SuperHeaderStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ToggleButton}">
          <Setter Property="Focusable" Value="False" />
          <Setter Property="HorizontalContentAlignment" Value="Center"/>
          <Setter Property="BorderThickness" Value="0,0,2,0"/>
          <Setter Property="Margin" Value="0,0,0,-1" />
          <Setter Property="FontWeight" Value="Bold" />
          <Setter Property="Height" Value="23" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ToggleButton}">
                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                  <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <!-- blue_dark -->
              <Setter Property="Background" Value="#1a345d" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type r:DataGrid}">
          <Grid>
            <Grid.ColumnDefinitions>
              <!-- Frozen -->
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!-- fill the space above the frozen columns -->
            <Rectangle Fill="{StaticResource HeaderBrush}" Height="{Binding Path=ActualHeight, ElementName=_super_headers}" HorizontalAlignment="Stretch" Margin="0,0,-1,-1" />
            <!-- colums set in code behind -->
            <GridViewHeaderRowPresenter x:Name="_header_frozen" Grid.Row="1" Grid.Column="0" AllowsColumnReorder="False" VerticalAlignment="Bottom" ColumnHeaderContainerStyle="{TemplateBinding ColumnHeaderStyle}" UseLayoutRounding="True" />
            <ScrollViewer Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Grid.RowSpan="2" 
                          HorizontalScrollBarVisibility="Hidden" 
                          VerticalScrollBarVisibility="Hidden" 
                          x:Name="_header_scroll_viewer">
              <StackPanel Background="{StaticResource HeaderBrush}">
                <!-- We don't need super headers over the fixed columns -->
                <StackPanel Orientation="Horizontal" x:Name="_super_headers" />
                <GridViewHeaderRowPresenter x:Name="_header_scroll" AllowsColumnReorder="False" ColumnHeaderContainerStyle="{TemplateBinding ColumnHeaderStyle}" UseLayoutRounding="True" />
              </StackPanel>
            </ScrollViewer>
            <r:DataGridRowsPresenter
              x:Name="_row_presenter"
              Grid.Row="2"
              Grid.ColumnSpan="2"
              ScrollViewer.HorizontalScrollBarVisibility="Hidden"
              VirtualizingPanel.VirtualizationMode="Recycling"
              AlternationCount="2" 
              Background="{TemplateBinding Background}"
              BorderThickness="0"
              ItemsSource="{TemplateBinding Rows}"
              ItemTemplate="{TemplateBinding RowTemplate}"
              SelectedItem="{Binding CurrentRow, RelativeSource={RelativeSource TemplatedParent}}"
              SelectionMode="{TemplateBinding SelectionMode}"
              ItemContainerStyle="{StaticResource {x:Type r:DataGridRow}}"
            >
              <r:DataGridRowsPresenter.Template>
                <ControlTemplate TargetType="{x:Type r:DataGridRowsPresenter}">
                  <ScrollViewer Focusable="False">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                  </ScrollViewer>
                </ControlTemplate>
              </r:DataGridRowsPresenter.Template>
            </r:DataGridRowsPresenter>
            <ScrollBar Grid.Row="3" Grid.Column="1" Orientation="Horizontal" LargeChange="10" x:Name="_scroll_horiz" />

            <!-- todo: All edit controls go in a canvas - edit api is called with an edit type. Hide all controls -->
            <c:TickUpDown Grid.RowSpan="3" Grid.ColumnSpan="2" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top"
                     TickUpCommand="{Binding tick_up}" TickDownCommand="{Binding tick_down}"
                     x:Name="_edit" Visibility="Collapsed">
              <TextBox Text="{Binding value}"/>
            </c:TickUpDown>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>